name: Build, Test, and Deploy

on:
  push:
    branches:
      - main

jobs:

#  Build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 20
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '20'
#
#      - name: Build with Maven
#        run: mvn -B clean install
#
#  Tests:
#    runs-on: ubuntu-latest
#    needs: [ Build ]
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 20
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '20'
#
#      - name: Run Tests with Maven
#        run: mvn test

  Deploy_to_DockerHub:
    runs-on: ubuntu-latest
#    needs: [ Tests ]
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Google auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GCP_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install jq
        run: sudo apt-get install jq

      - name: Copy secrets env file from Google Secret Manager to secrets.json
        run: gcloud secrets versions access latest --secret=SHOES-SERVICE-SECRETS-FILE > secrets.json

      - name: Extracting secrets from a secret file
        run: |
          export DOCKER_NAME_CONTAINER=$(jq -r '.DOCKER_NAME_CONTAINER' secrets.json)
          export DOCKER_CONTAINER_TAG=$(jq -r '.DOCKER_CONTAINER_TAG' secrets.json)
          export DOCKER_USERNAME=$(jq -r '.DOCKER_USERNAME' secrets.json)
          export DOCKER_PASSWORD=$(jq -r '.DOCKER_PASSWORD' secrets.json)

          echo "DOCKER_NAME_CONTAINER=$DOCKER_NAME_CONTAINER" >> "$GITHUB_ENV"
          echo "DOCKER_CONTAINER_TAG=$DOCKER_CONTAINER_TAG" >> "$GITHUB_ENV"
          echo "DOCKER_USERNAME=$DOCKER_USERNAME" >> "$GITHUB_ENV"
          echo "DOCKER_PASSWORD=$DOCKER_PASSWORD" >> "$GITHUB_ENV"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --file ./Dockerfile \
            --tag $DOCKER_USERNAME/$DOCKER_NAME_CONTAINER:$DOCKER_CONTAINER_TAG \
            --push .


  Deploy_to_Google_Cloud:
    runs-on: ubuntu-latest
#    needs: [ Deploy_to_DockerHub ]
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GCP_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install jq
        run: sudo apt-get install jq

      - name: Copy secrets env file from Google Secret Manager to secrets.json
        run: gcloud secrets versions access latest --secret=SHOES-SERVICE-SECRETS-FILE > secrets.json

      - name: Extracting secrets from a secret file
        run: |-
          export GCP_REGION=$(jq -r '.GCP_REGION' secrets.json)
          export GCP_PROJECT_ID=$(jq -r '.GCP_PROJECT_ID' secrets.json)
          export GCP_APP=$(jq -r '.GCP_APP' secrets.json)
          export DOCKER_NAME_CONTAINER=$(jq -r '.DOCKER_NAME_CONTAINER' secrets.json)
          export SHOES_SERVICE_SERVER_PORT=$(jq -r '.SHOES_SERVICE_SERVER_PORT' secrets.json)
          export SQL_INSTANCE_NAME=$(jq -r '.SQL_INSTANCE_NAME' secrets.json)
          export GCP_SQL_ACCOUNT_SERVICE_NAME=$(jq -r '.GCP_SQL_ACCOUNT_SERVICE_NAME' secrets.json)
          
          echo "GCP_REGION=$GCP_REGION" >> "$GITHUB_ENV"
          echo "GCP_PROJECT_ID=$GCP_PROJECT_ID" >> "$GITHUB_ENV"
          echo "GCP_APP=$GCP_APP" >> "$GITHUB_ENV"
          echo "DOCKER_NAME_CONTAINER=$DOCKER_NAME_CONTAINER" >> "$GITHUB_ENV"
          echo "SHOES_SERVICE_SERVER_PORT=$SHOES_SERVICE_SERVER_PORT" >> "$GITHUB_ENV"
          echo "SQL_INSTANCE_NAME=$SQL_INSTANCE_NAME" >> "$GITHUB_ENV"
          echo "GCP_SQL_ACCOUNT_SERVICE_NAME=$GCP_SQL_ACCOUNT_SERVICE_NAME" >> "$GITHUB_ENV"

      - name: Docker auth in Google
        run: |-
          echo "$GCP_REGION"
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - name: Build and push container to Google Artifact Registry
        run: |-
          docker buildx create --use
          docker buildx build \
            --file ./Dockerfile \
            --tag $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_APP/$DOCKER_NAME_CONTAINER:${{ github.sha }} \
            --push .

      - name: Deploy to Cloud Run
        id: deploy
        run: |-
          gcloud run deploy $DOCKER_NAME_CONTAINER \
            --image=$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_APP/$DOCKER_NAME_CONTAINER:${{ github.sha }} \
            --region=$GCP_REGION \
            --project=$GCP_PROJECT_ID \
            --port=$SHOES_SERVICE_SERVER_PORT \
            --add-cloudsql-instances=$SQL_INSTANCE_NAME \
            --service-account=$GCP_SQL_ACCOUNT_SERVICE_NAME \
            --env-vars-file=./secrets.json \
            --allow-unauthenticated
